<template>
  <button v-bind:class="'button ' + classes" :disabled="disabled" v-bind:type="type" v-on:click="_onClick" 
    v-bind:data-loading="state == 'loading'"
    v-bind:data-loaded="state == 'loaded'"
    >
    <span v-bind:class="'button__label ' + iconClass">{{text}}</span>
    <span class="button__label--success icon icon--left icon-thumb-up">Success</span>
    <span class="button__spinner">
      <span class="spinner-holder">
        <span class="spinner-container">
          <em><span></span></em>
        </span>
      </span>
    </span>
  </button>
</template>

<script>
const SIZE_SMALL = 'small';
const SIZE_MICRO = 'micro';
const CSS_SMALL = 'button--small';
const CSS_MICRO = 'button--micro';

export default {
  props: {
    text: String,
    type: {
      type: String,
      default: 'button'
    },
    useLoading: {
      type: [Boolean, String],
      default: false
    },
    disabled: {
      type: Boolean,
      default: false
    },
    class: String,
    iconClass: String,
    size: String
  },
  data: function () {
    return {
      state: ''
    };
  },
  computed: {
    classes: function () {
      var classes = '';
      if (this.class) {
        classes += ' ' + this.class;
      }
      if (this.size === SIZE_SMALL) {
        classes += ' ' + CSS_SMALL;
      } else if (this.size === SIZE_MICRO) {
        classes += ' ' + CSS_MICRO;
      }

      return classes;
    }
  },
  methods: {
    activityIndicator: function (promise) {
      this._loading();
      promise.then(this._loadedWithSuccess, this._loadedWithError);
    },
    _onClick: function (e) {
      if (this.state === 'loading') {
        e.preventDefault();
        return false;
      }

      if (this.state === 'loaded') {
        this.$emit('loaded-click');
        e.preventDefault();
        return false;
      }

      if (this.useLoading) {
        this._loading();
      }
      this.$emit('btn-click');
    },
    _loading: function () {
      this.state = 'loading';
    },
    _loadedWithSuccess: function () {
      this.state = 'loaded';
      this.$emit('action-finished');
    },
    _loadedWithError: function () {
      this.state = '';
      this.$emit('action-finished');
    }
  }
};

</script>
