import {TTabs, TFlatTabs} from '../../utils/taurus';
import TDTabs from '../../components/tabs/dynamic-tabs';

new Vue({
  name: 'TabsDemo',

  el: 'body',

  components: {
    TTabs,
    TFlatTabs,
    TDTabs
  },

  data () {
    return {
      tabs: ['Panel 1', 'Panel 2', 'Panel 3'],
      dTabs: [{name: 'Panel_1'}, {name: 'Panel_2'}, {name: 'Panel_3'}],
      content: [
        {
          type: 'Panel 1',
          id: 'panel_one'
        },
        {
          type: 'Panel 2',
          id: 'panel_two'
        },
        {
          type: 'Panel 3',
          id: 'panel_three'
        }
      ],
      smallTabs: ['Panel 1', 'Panel 2', 'Panel 3'],
      smallContent: [
        {
          type: 'Panel 1',
          id: 's_panel_one'
        },
        {
          type: 'Panel 2',
          id: 's_panel_two'
        },
        {
          type: 'Panel 3',
          id: 's_panel_three'
        }
      ],
      flatTabs: ['LongPanel 1', 'LongPanel 2', 'LongPanel 3', 'LongPanel 4', 'LongPanel 5'],
      flatContent: [
        {
          type: 'LongPanel 1',
          id: 'flat_panel_one'
        },
        {
          type: 'LongPanel 2',
          id: 'flat_panel_two'
        },
        {
          type: 'LongPanel 3',
          id: 'flat_panel_three'
        },
        {
          type: 'LongPanel 4',
          id: 'flat_panel_four'
        },
        {
          type: 'LongPanel 5',
          id: 'flat_panel_five'
        }
      ],
      fewFlatTabs: ['Panel 1', 'Panel 2', 'PanelWithLongName'],
      fewFlatContent: [
        {
          type: 'Panel 1',
          id: 'f_flat_panel_one'
        },
        {
          type: 'Panel 2',
          id: 'f_flat_panel_two'
        },
        {
          type: 'PanelWithLongName',
          id: 'f_flat_panel_three'
        }
      ]
    };
  },

  methods: {
    addOneTab (tab) {
      this.$refs.tdTab.addTab(tab);
    },
    addMoreTab () {
      this.$refs.tdTab.addTab({name: 'tab' + (Math.random() + '').substr(2)});
    },
    closeOneTab (tab) {
      this.$refs.tdTab.closeTab(tab);
    },
    onChange (val, oldVal) {
      alert(oldVal + '--->' + val);
    },
    onAdd (tab) {
      alert('tab ' + tab + 'was added!');
    },
    onClose (tab) {
      alert('tab ' + tab + 'was closed!');
    }
  },

  events: {
    'tab-change' () {},
    'tab-add' () {},
    'tab-close' () {}
  }
});
